{"version":3,"sources":["Screens/HomeScreen.jsx","Routes/AppRoutes.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomeScreen","useState","apiData","setApiData","files","setFiles","error","setError","viewChange","setViewChange","formData","FormData","append","handleSubmit","a","length","axios","post","data","rows","response","message","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Row","Col","xs","md","Form","File","custom","Input","isInvalid","onChange","e","target","Label","data-browse","name","Control","Feedback","type","style","color","Button","variant","onClick","window","location","download","textDecoration","display","Table","striped","bordered","hover","responsive","map","dataIndex","singleData","index","Math","random","AppRoutes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13af1aec.chunk.js","sourcesContent":["// import { Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { Container, Form, Nav, Navbar, Button, Row, Col, Table } from 'react-bootstrap';\r\n\r\nconst HomeScreen = () => {\r\n    const [apiData, setApiData] = useState([]);\r\n    const [files, setFiles] = useState([]);\r\n    const [error, setError] = useState('');\r\n    const [viewChange, setViewChange] = useState(false);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', files[0]);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (files.length) {\r\n                const { data } = await axios.post('/api/v1/home', formData);\r\n                setApiData(data.data.rows);\r\n                setError('');\r\n                setFiles([]);\r\n            } else {\r\n                setError('You have not choose any excel file');\r\n            }\r\n        } catch (err) {\r\n            setError(err.response.data.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">Excel File Reader</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                            <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n\r\n            <Container>\r\n                <section className=\"mt-5\">\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <div className=\"w-100  mb-3 float-left\">\r\n                                <Form.File id=\"formcheck-api-custom\" custom>\r\n                                    <Form.File.Input\r\n                                        isInvalid={!!error}\r\n                                        onChange={(e) => {\r\n                                            setFiles(e.target.files);\r\n                                            setError('');\r\n                                        }}\r\n                                    />\r\n                                    <Form.File.Label data-browse=\"Select a file\">\r\n                                        {files[0]?.name ?? 'Select an Excel file'}\r\n                                    </Form.File.Label>\r\n                                    <Form.Control.Feedback type=\"Invalid\" style={{ color: 'red' }}>\r\n                                        {error || ''}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.File>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={12} md={2}>\r\n                            <Button variant=\"primary\" className=\"w-100 mb-3\" onClick={handleSubmit}>\r\n                                Upload\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={12} md={2}>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                className=\"w-100 mb-3\"\r\n                                onClick={() => setViewChange(!viewChange)}\r\n                            >\r\n                                Change View\r\n                            </Button>\r\n                        </Col>\r\n                        <Col xs={12} md={2}>\r\n                            <Button variant=\"primary\" className=\"w-100 mb-3\">\r\n                                <a\r\n                                    href={`${window.location.href}/uploads/document.docx`}\r\n                                    download\r\n                                    className=\"text-white\"\r\n                                    style={{ textDecoration: 'none' }}\r\n                                >\r\n                                    Download as Doc\r\n                                </a>\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </section>\r\n            </Container>\r\n            <Container className=\"text-center\">\r\n                <h4>{files[0]?.name ? `${files[0]?.name}` : ''}</h4>\r\n                <section style={{ display: viewChange ? 'block' : 'none' }}>\r\n                    <Table striped bordered hover responsive>\r\n                        <tbody>\r\n                            {apiData.map((data, dataIndex) => (\r\n                                <tr key={`${data + dataIndex + Math.random() * 10}`}>\r\n                                    {data.map((singleData, index) => (\r\n                                        <td key={`${singleData + index + Math.random() * 10}`}>\r\n                                            {singleData}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </section>\r\n            </Container>\r\n\r\n            <Container style={{ display: viewChange ? 'none' : 'block' }}>\r\n                {apiData.map((data, dataIndex) => (\r\n                    <>\r\n                        {data.map((singleData, index) => (\r\n                            <>\r\n                                {index === 0 ? (\r\n                                    <>\r\n                                        <br />\r\n                                        <h4 style={{ color: 'blue' }}>\r\n                                            {dataIndex !== 0\r\n                                                ? `Data Row ${dataIndex}`\r\n                                                : 'Data Title'}\r\n                                        </h4>\r\n                                        <h5>\r\n                                            {index}.{singleData}\r\n                                        </h5>{' '}\r\n                                    </>\r\n                                ) : (\r\n                                    <h5>\r\n                                        {index}.{singleData}\r\n                                    </h5>\r\n                                )}\r\n                            </>\r\n                        ))}\r\n                    </>\r\n                ))}\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { Switch, Route } from 'react-router-dom';\r\nimport HomeScreen from '../Screens/HomeScreen';\r\n\r\nconst AppRoutes = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={HomeScreen} />\r\n    </Switch>\r\n);\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport AppRoutes from './Routes/AppRoutes';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <Route path=\"/\" component={AppRoutes} />\r\n    </Router>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}